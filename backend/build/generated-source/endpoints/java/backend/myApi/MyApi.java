/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-02-15 17:18:02 UTC)
 * on 2017-08-07 at 03:57:29 UTC 
 * Modify at your own risk.
 */

package backend.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addCategoryToMerchant".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddCategoryToMerchant#execute()} method to invoke the remote
   * operation.
   *
   * @param merchantID
   * @param categoryID
   * @return the request
   */
  public AddCategoryToMerchant addCategoryToMerchant(java.lang.Long merchantID, java.lang.Long categoryID) throws java.io.IOException {
    AddCategoryToMerchant result = new AddCategoryToMerchant(merchantID, categoryID);
    initialize(result);
    return result;
  }

  public class AddCategoryToMerchant extends MyApiRequest<backend.myApi.model.Merchant> {

    private static final String REST_PATH = "addCategoryToMerchant/{merchantID}/{categoryID}";

    /**
     * Create a request for the method "addCategoryToMerchant".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddCategoryToMerchant#execute()} method to invoke the remote
     * operation. <p> {@link AddCategoryToMerchant#initialize(com.google.api.client.googleapis.service
     * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param merchantID
     * @param categoryID
     * @since 1.13
     */
    protected AddCategoryToMerchant(java.lang.Long merchantID, java.lang.Long categoryID) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Merchant.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
      this.categoryID = com.google.api.client.util.Preconditions.checkNotNull(categoryID, "Required parameter categoryID must be specified.");
    }

    @Override
    public AddCategoryToMerchant setAlt(java.lang.String alt) {
      return (AddCategoryToMerchant) super.setAlt(alt);
    }

    @Override
    public AddCategoryToMerchant setFields(java.lang.String fields) {
      return (AddCategoryToMerchant) super.setFields(fields);
    }

    @Override
    public AddCategoryToMerchant setKey(java.lang.String key) {
      return (AddCategoryToMerchant) super.setKey(key);
    }

    @Override
    public AddCategoryToMerchant setOauthToken(java.lang.String oauthToken) {
      return (AddCategoryToMerchant) super.setOauthToken(oauthToken);
    }

    @Override
    public AddCategoryToMerchant setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddCategoryToMerchant) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddCategoryToMerchant setQuotaUser(java.lang.String quotaUser) {
      return (AddCategoryToMerchant) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddCategoryToMerchant setUserIp(java.lang.String userIp) {
      return (AddCategoryToMerchant) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public AddCategoryToMerchant setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long categoryID;

    /**

     */
    public java.lang.Long getCategoryID() {
      return categoryID;
    }

    public AddCategoryToMerchant setCategoryID(java.lang.Long categoryID) {
      this.categoryID = categoryID;
      return this;
    }

    @Override
    public AddCategoryToMerchant set(String parameterName, Object value) {
      return (AddCategoryToMerchant) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addItemToCategory".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddItemToCategory#execute()} method to invoke the remote operation.
   *
   * @param categoryID
   * @param itemID
   * @return the request
   */
  public AddItemToCategory addItemToCategory(java.lang.Long categoryID, java.lang.Long itemID) throws java.io.IOException {
    AddItemToCategory result = new AddItemToCategory(categoryID, itemID);
    initialize(result);
    return result;
  }

  public class AddItemToCategory extends MyApiRequest<backend.myApi.model.Category> {

    private static final String REST_PATH = "addItemToCategory/{categoryID}/{itemID}";

    /**
     * Create a request for the method "addItemToCategory".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddItemToCategory#execute()} method to invoke the remote operation.
     * <p> {@link AddItemToCategory#initialize(com.google.api.client.googleapis.services.AbstractGoogl
     * eClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param categoryID
     * @param itemID
     * @since 1.13
     */
    protected AddItemToCategory(java.lang.Long categoryID, java.lang.Long itemID) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Category.class);
      this.categoryID = com.google.api.client.util.Preconditions.checkNotNull(categoryID, "Required parameter categoryID must be specified.");
      this.itemID = com.google.api.client.util.Preconditions.checkNotNull(itemID, "Required parameter itemID must be specified.");
    }

    @Override
    public AddItemToCategory setAlt(java.lang.String alt) {
      return (AddItemToCategory) super.setAlt(alt);
    }

    @Override
    public AddItemToCategory setFields(java.lang.String fields) {
      return (AddItemToCategory) super.setFields(fields);
    }

    @Override
    public AddItemToCategory setKey(java.lang.String key) {
      return (AddItemToCategory) super.setKey(key);
    }

    @Override
    public AddItemToCategory setOauthToken(java.lang.String oauthToken) {
      return (AddItemToCategory) super.setOauthToken(oauthToken);
    }

    @Override
    public AddItemToCategory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddItemToCategory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddItemToCategory setQuotaUser(java.lang.String quotaUser) {
      return (AddItemToCategory) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddItemToCategory setUserIp(java.lang.String userIp) {
      return (AddItemToCategory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long categoryID;

    /**

     */
    public java.lang.Long getCategoryID() {
      return categoryID;
    }

    public AddItemToCategory setCategoryID(java.lang.Long categoryID) {
      this.categoryID = categoryID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long itemID;

    /**

     */
    public java.lang.Long getItemID() {
      return itemID;
    }

    public AddItemToCategory setItemID(java.lang.Long itemID) {
      this.itemID = itemID;
      return this;
    }

    @Override
    public AddItemToCategory set(String parameterName, Object value) {
      return (AddItemToCategory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addOptionToRestaurantItem".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddOptionToRestaurantItem#execute()} method to invoke the remote
   * operation.
   *
   * @param itemID
   * @param optionID
   * @return the request
   */
  public AddOptionToRestaurantItem addOptionToRestaurantItem(java.lang.Long itemID, java.lang.Long optionID) throws java.io.IOException {
    AddOptionToRestaurantItem result = new AddOptionToRestaurantItem(itemID, optionID);
    initialize(result);
    return result;
  }

  public class AddOptionToRestaurantItem extends MyApiRequest<backend.myApi.model.Item> {

    private static final String REST_PATH = "addOptionToRestaurantItem/{itemID}/{optionID}";

    /**
     * Create a request for the method "addOptionToRestaurantItem".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddOptionToRestaurantItem#execute()} method to invoke the remote
     * operation. <p> {@link AddOptionToRestaurantItem#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param itemID
     * @param optionID
     * @since 1.13
     */
    protected AddOptionToRestaurantItem(java.lang.Long itemID, java.lang.Long optionID) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Item.class);
      this.itemID = com.google.api.client.util.Preconditions.checkNotNull(itemID, "Required parameter itemID must be specified.");
      this.optionID = com.google.api.client.util.Preconditions.checkNotNull(optionID, "Required parameter optionID must be specified.");
    }

    @Override
    public AddOptionToRestaurantItem setAlt(java.lang.String alt) {
      return (AddOptionToRestaurantItem) super.setAlt(alt);
    }

    @Override
    public AddOptionToRestaurantItem setFields(java.lang.String fields) {
      return (AddOptionToRestaurantItem) super.setFields(fields);
    }

    @Override
    public AddOptionToRestaurantItem setKey(java.lang.String key) {
      return (AddOptionToRestaurantItem) super.setKey(key);
    }

    @Override
    public AddOptionToRestaurantItem setOauthToken(java.lang.String oauthToken) {
      return (AddOptionToRestaurantItem) super.setOauthToken(oauthToken);
    }

    @Override
    public AddOptionToRestaurantItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddOptionToRestaurantItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddOptionToRestaurantItem setQuotaUser(java.lang.String quotaUser) {
      return (AddOptionToRestaurantItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddOptionToRestaurantItem setUserIp(java.lang.String userIp) {
      return (AddOptionToRestaurantItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long itemID;

    /**

     */
    public java.lang.Long getItemID() {
      return itemID;
    }

    public AddOptionToRestaurantItem setItemID(java.lang.Long itemID) {
      this.itemID = itemID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long optionID;

    /**

     */
    public java.lang.Long getOptionID() {
      return optionID;
    }

    public AddOptionToRestaurantItem setOptionID(java.lang.Long optionID) {
      this.optionID = optionID;
      return this;
    }

    @Override
    public AddOptionToRestaurantItem set(String parameterName, Object value) {
      return (AddOptionToRestaurantItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "create20Merchants".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link Create20Merchants#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Create20Merchants create20Merchants() throws java.io.IOException {
    Create20Merchants result = new Create20Merchants();
    initialize(result);
    return result;
  }

  public class Create20Merchants extends MyApiRequest<backend.myApi.model.MerchantCollection> {

    private static final String REST_PATH = "create20Merchants";

    /**
     * Create a request for the method "create20Merchants".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link Create20Merchants#execute()} method to invoke the remote operation.
     * <p> {@link Create20Merchants#initialize(com.google.api.client.googleapis.services.AbstractGoogl
     * eClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @since 1.13
     */
    protected Create20Merchants() {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.MerchantCollection.class);
    }

    @Override
    public Create20Merchants setAlt(java.lang.String alt) {
      return (Create20Merchants) super.setAlt(alt);
    }

    @Override
    public Create20Merchants setFields(java.lang.String fields) {
      return (Create20Merchants) super.setFields(fields);
    }

    @Override
    public Create20Merchants setKey(java.lang.String key) {
      return (Create20Merchants) super.setKey(key);
    }

    @Override
    public Create20Merchants setOauthToken(java.lang.String oauthToken) {
      return (Create20Merchants) super.setOauthToken(oauthToken);
    }

    @Override
    public Create20Merchants setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Create20Merchants) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Create20Merchants setQuotaUser(java.lang.String quotaUser) {
      return (Create20Merchants) super.setQuotaUser(quotaUser);
    }

    @Override
    public Create20Merchants setUserIp(java.lang.String userIp) {
      return (Create20Merchants) super.setUserIp(userIp);
    }

    @Override
    public Create20Merchants set(String parameterName, Object value) {
      return (Create20Merchants) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createCategory".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateCategory#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param description
   * @param imageURL
   * @return the request
   */
  public CreateCategory createCategory(java.lang.String name, java.lang.String description, java.lang.String imageURL) throws java.io.IOException {
    CreateCategory result = new CreateCategory(name, description, imageURL);
    initialize(result);
    return result;
  }

  public class CreateCategory extends MyApiRequest<backend.myApi.model.Category> {

    private static final String REST_PATH = "createCategory/{name}/{description}/{imageURL}";

    /**
     * Create a request for the method "createCategory".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateCategory#execute()} method to invoke the remote operation.
     * <p> {@link CreateCategory#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param name
     * @param description
     * @param imageURL
     * @since 1.13
     */
    protected CreateCategory(java.lang.String name, java.lang.String description, java.lang.String imageURL) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Category.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateCategory setAlt(java.lang.String alt) {
      return (CreateCategory) super.setAlt(alt);
    }

    @Override
    public CreateCategory setFields(java.lang.String fields) {
      return (CreateCategory) super.setFields(fields);
    }

    @Override
    public CreateCategory setKey(java.lang.String key) {
      return (CreateCategory) super.setKey(key);
    }

    @Override
    public CreateCategory setOauthToken(java.lang.String oauthToken) {
      return (CreateCategory) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateCategory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateCategory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateCategory setQuotaUser(java.lang.String quotaUser) {
      return (CreateCategory) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateCategory setUserIp(java.lang.String userIp) {
      return (CreateCategory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateCategory setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public CreateCategory setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateCategory setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateCategory set(String parameterName, Object value) {
      return (CreateCategory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createCustomer".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateCustomer#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param mainAddress
   * @param phone
   * @return the request
   */
  public CreateCustomer createCustomer(java.lang.String name, java.lang.String email, java.lang.String mainAddress, java.lang.String phone) throws java.io.IOException {
    CreateCustomer result = new CreateCustomer(name, email, mainAddress, phone);
    initialize(result);
    return result;
  }

  public class CreateCustomer extends MyApiRequest<backend.myApi.model.Customer> {

    private static final String REST_PATH = "createCustomer/{name}/{email}/{mainAddress}/{phone}";

    /**
     * Create a request for the method "createCustomer".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateCustomer#execute()} method to invoke the remote operation.
     * <p> {@link CreateCustomer#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param name
     * @param email
     * @param mainAddress
     * @param phone
     * @since 1.13
     */
    protected CreateCustomer(java.lang.String name, java.lang.String email, java.lang.String mainAddress, java.lang.String phone) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Customer.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.mainAddress = com.google.api.client.util.Preconditions.checkNotNull(mainAddress, "Required parameter mainAddress must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
    }

    @Override
    public CreateCustomer setAlt(java.lang.String alt) {
      return (CreateCustomer) super.setAlt(alt);
    }

    @Override
    public CreateCustomer setFields(java.lang.String fields) {
      return (CreateCustomer) super.setFields(fields);
    }

    @Override
    public CreateCustomer setKey(java.lang.String key) {
      return (CreateCustomer) super.setKey(key);
    }

    @Override
    public CreateCustomer setOauthToken(java.lang.String oauthToken) {
      return (CreateCustomer) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateCustomer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateCustomer setQuotaUser(java.lang.String quotaUser) {
      return (CreateCustomer) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateCustomer setUserIp(java.lang.String userIp) {
      return (CreateCustomer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateCustomer setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateCustomer setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String mainAddress;

    /**

     */
    public java.lang.String getMainAddress() {
      return mainAddress;
    }

    public CreateCustomer setMainAddress(java.lang.String mainAddress) {
      this.mainAddress = mainAddress;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateCustomer setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @Override
    public CreateCustomer set(String parameterName, Object value) {
      return (CreateCustomer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createDriver".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateDriver#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param vehicle
   * @param imageURL
   * @return the request
   */
  public CreateDriver createDriver(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String vehicle, java.lang.String imageURL) throws java.io.IOException {
    CreateDriver result = new CreateDriver(name, email, phone, vehicle, imageURL);
    initialize(result);
    return result;
  }

  public class CreateDriver extends MyApiRequest<backend.myApi.model.Driver> {

    private static final String REST_PATH = "createDriver/{name}/{email}/{phone}/{vehicle}/{imageURL}";

    /**
     * Create a request for the method "createDriver".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateDriver#execute()} method to invoke the remote operation. <p>
     * {@link
     * CreateDriver#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param vehicle
     * @param imageURL
     * @since 1.13
     */
    protected CreateDriver(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String vehicle, java.lang.String imageURL) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Driver.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.vehicle = com.google.api.client.util.Preconditions.checkNotNull(vehicle, "Required parameter vehicle must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateDriver setAlt(java.lang.String alt) {
      return (CreateDriver) super.setAlt(alt);
    }

    @Override
    public CreateDriver setFields(java.lang.String fields) {
      return (CreateDriver) super.setFields(fields);
    }

    @Override
    public CreateDriver setKey(java.lang.String key) {
      return (CreateDriver) super.setKey(key);
    }

    @Override
    public CreateDriver setOauthToken(java.lang.String oauthToken) {
      return (CreateDriver) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateDriver setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateDriver) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateDriver setQuotaUser(java.lang.String quotaUser) {
      return (CreateDriver) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateDriver setUserIp(java.lang.String userIp) {
      return (CreateDriver) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateDriver setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateDriver setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateDriver setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String vehicle;

    /**

     */
    public java.lang.String getVehicle() {
      return vehicle;
    }

    public CreateDriver setVehicle(java.lang.String vehicle) {
      this.vehicle = vehicle;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateDriver setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateDriver set(String parameterName, Object value) {
      return (CreateDriver) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createOption".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateOption#execute()} method to invoke the remote operation.
   *
   * @param available
   * @param description
   * @param name
   * @param price
   * @param required
   * @return the request
   */
  public CreateOption createOption(java.lang.Boolean available, java.lang.String description, java.lang.String name, java.lang.Double price, java.lang.Boolean required) throws java.io.IOException {
    CreateOption result = new CreateOption(available, description, name, price, required);
    initialize(result);
    return result;
  }

  public class CreateOption extends MyApiRequest<backend.myApi.model.RestaurantItemOption> {

    private static final String REST_PATH = "createOption";

    /**
     * Create a request for the method "createOption".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateOption#execute()} method to invoke the remote operation. <p>
     * {@link
     * CreateOption#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param available
     * @param description
     * @param name
     * @param price
     * @param required
     * @since 1.13
     */
    protected CreateOption(java.lang.Boolean available, java.lang.String description, java.lang.String name, java.lang.Double price, java.lang.Boolean required) {
      super(MyApi.this, "GET", REST_PATH, null, backend.myApi.model.RestaurantItemOption.class);
      this.available = com.google.api.client.util.Preconditions.checkNotNull(available, "Required parameter available must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.price = com.google.api.client.util.Preconditions.checkNotNull(price, "Required parameter price must be specified.");
      this.required = com.google.api.client.util.Preconditions.checkNotNull(required, "Required parameter required must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public CreateOption setAlt(java.lang.String alt) {
      return (CreateOption) super.setAlt(alt);
    }

    @Override
    public CreateOption setFields(java.lang.String fields) {
      return (CreateOption) super.setFields(fields);
    }

    @Override
    public CreateOption setKey(java.lang.String key) {
      return (CreateOption) super.setKey(key);
    }

    @Override
    public CreateOption setOauthToken(java.lang.String oauthToken) {
      return (CreateOption) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateOption setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateOption) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateOption setQuotaUser(java.lang.String quotaUser) {
      return (CreateOption) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateOption setUserIp(java.lang.String userIp) {
      return (CreateOption) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean available;

    /**

     */
    public java.lang.Boolean getAvailable() {
      return available;
    }

    public CreateOption setAvailable(java.lang.Boolean available) {
      this.available = available;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public CreateOption setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateOption setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double price;

    /**

     */
    public java.lang.Double getPrice() {
      return price;
    }

    public CreateOption setPrice(java.lang.Double price) {
      this.price = price;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean required;

    /**

     */
    public java.lang.Boolean getRequired() {
      return required;
    }

    public CreateOption setRequired(java.lang.Boolean required) {
      this.required = required;
      return this;
    }

    @Override
    public CreateOption set(String parameterName, Object value) {
      return (CreateOption) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createPharmacy".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreatePharmacy#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param imageURL
   * @return the request
   */
  public CreatePharmacy createPharmacy(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) throws java.io.IOException {
    CreatePharmacy result = new CreatePharmacy(name, email, phone, imageURL);
    initialize(result);
    return result;
  }

  public class CreatePharmacy extends MyApiRequest<backend.myApi.model.Pharmacy> {

    private static final String REST_PATH = "createPharmacy/{name}/{email}/{phone}/{imageURL}";

    /**
     * Create a request for the method "createPharmacy".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreatePharmacy#execute()} method to invoke the remote operation.
     * <p> {@link CreatePharmacy#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param imageURL
     * @since 1.13
     */
    protected CreatePharmacy(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Pharmacy.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreatePharmacy setAlt(java.lang.String alt) {
      return (CreatePharmacy) super.setAlt(alt);
    }

    @Override
    public CreatePharmacy setFields(java.lang.String fields) {
      return (CreatePharmacy) super.setFields(fields);
    }

    @Override
    public CreatePharmacy setKey(java.lang.String key) {
      return (CreatePharmacy) super.setKey(key);
    }

    @Override
    public CreatePharmacy setOauthToken(java.lang.String oauthToken) {
      return (CreatePharmacy) super.setOauthToken(oauthToken);
    }

    @Override
    public CreatePharmacy setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreatePharmacy) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreatePharmacy setQuotaUser(java.lang.String quotaUser) {
      return (CreatePharmacy) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreatePharmacy setUserIp(java.lang.String userIp) {
      return (CreatePharmacy) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreatePharmacy setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreatePharmacy setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreatePharmacy setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreatePharmacy setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreatePharmacy set(String parameterName, Object value) {
      return (CreatePharmacy) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createPharmacyItem".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreatePharmacyItem#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param basePrice
   * @return the request
   */
  public CreatePharmacyItem createPharmacyItem(java.lang.String name, java.lang.Double basePrice) throws java.io.IOException {
    CreatePharmacyItem result = new CreatePharmacyItem(name, basePrice);
    initialize(result);
    return result;
  }

  public class CreatePharmacyItem extends MyApiRequest<backend.myApi.model.PharmacyItem> {

    private static final String REST_PATH = "createPharmacyItem/{name}/{basePrice}";

    /**
     * Create a request for the method "createPharmacyItem".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreatePharmacyItem#execute()} method to invoke the remote
     * operation. <p> {@link CreatePharmacyItem#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param name
     * @param basePrice
     * @since 1.13
     */
    protected CreatePharmacyItem(java.lang.String name, java.lang.Double basePrice) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.PharmacyItem.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.basePrice = com.google.api.client.util.Preconditions.checkNotNull(basePrice, "Required parameter basePrice must be specified.");
    }

    @Override
    public CreatePharmacyItem setAlt(java.lang.String alt) {
      return (CreatePharmacyItem) super.setAlt(alt);
    }

    @Override
    public CreatePharmacyItem setFields(java.lang.String fields) {
      return (CreatePharmacyItem) super.setFields(fields);
    }

    @Override
    public CreatePharmacyItem setKey(java.lang.String key) {
      return (CreatePharmacyItem) super.setKey(key);
    }

    @Override
    public CreatePharmacyItem setOauthToken(java.lang.String oauthToken) {
      return (CreatePharmacyItem) super.setOauthToken(oauthToken);
    }

    @Override
    public CreatePharmacyItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreatePharmacyItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreatePharmacyItem setQuotaUser(java.lang.String quotaUser) {
      return (CreatePharmacyItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreatePharmacyItem setUserIp(java.lang.String userIp) {
      return (CreatePharmacyItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreatePharmacyItem setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double basePrice;

    /**

     */
    public java.lang.Double getBasePrice() {
      return basePrice;
    }

    public CreatePharmacyItem setBasePrice(java.lang.Double basePrice) {
      this.basePrice = basePrice;
      return this;
    }

    @Override
    public CreatePharmacyItem set(String parameterName, Object value) {
      return (CreatePharmacyItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createRestaurant".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateRestaurant#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param imageURL
   * @return the request
   */
  public CreateRestaurant createRestaurant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) throws java.io.IOException {
    CreateRestaurant result = new CreateRestaurant(name, email, phone, imageURL);
    initialize(result);
    return result;
  }

  public class CreateRestaurant extends MyApiRequest<backend.myApi.model.Restaurant> {

    private static final String REST_PATH = "createRestaurant/{name}/{email}/{phone}/{imageURL}";

    /**
     * Create a request for the method "createRestaurant".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateRestaurant#execute()} method to invoke the remote operation.
     * <p> {@link CreateRestaurant#initialize(com.google.api.client.googleapis.services.AbstractGoogle
     * ClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param imageURL
     * @since 1.13
     */
    protected CreateRestaurant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.Restaurant.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateRestaurant setAlt(java.lang.String alt) {
      return (CreateRestaurant) super.setAlt(alt);
    }

    @Override
    public CreateRestaurant setFields(java.lang.String fields) {
      return (CreateRestaurant) super.setFields(fields);
    }

    @Override
    public CreateRestaurant setKey(java.lang.String key) {
      return (CreateRestaurant) super.setKey(key);
    }

    @Override
    public CreateRestaurant setOauthToken(java.lang.String oauthToken) {
      return (CreateRestaurant) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateRestaurant setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateRestaurant) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateRestaurant setQuotaUser(java.lang.String quotaUser) {
      return (CreateRestaurant) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateRestaurant setUserIp(java.lang.String userIp) {
      return (CreateRestaurant) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateRestaurant setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateRestaurant setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateRestaurant setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateRestaurant setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateRestaurant set(String parameterName, Object value) {
      return (CreateRestaurant) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createRestaurantItem".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateRestaurantItem#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param basePrice
   * @return the request
   */
  public CreateRestaurantItem createRestaurantItem(java.lang.String name, java.lang.Double basePrice) throws java.io.IOException {
    CreateRestaurantItem result = new CreateRestaurantItem(name, basePrice);
    initialize(result);
    return result;
  }

  public class CreateRestaurantItem extends MyApiRequest<backend.myApi.model.RestaurantItem> {

    private static final String REST_PATH = "createRestaurantItem/{name}/{basePrice}";

    /**
     * Create a request for the method "createRestaurantItem".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateRestaurantItem#execute()} method to invoke the remote
     * operation. <p> {@link CreateRestaurantItem#initialize(com.google.api.client.googleapis.services
     * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param name
     * @param basePrice
     * @since 1.13
     */
    protected CreateRestaurantItem(java.lang.String name, java.lang.Double basePrice) {
      super(MyApi.this, "POST", REST_PATH, null, backend.myApi.model.RestaurantItem.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.basePrice = com.google.api.client.util.Preconditions.checkNotNull(basePrice, "Required parameter basePrice must be specified.");
    }

    @Override
    public CreateRestaurantItem setAlt(java.lang.String alt) {
      return (CreateRestaurantItem) super.setAlt(alt);
    }

    @Override
    public CreateRestaurantItem setFields(java.lang.String fields) {
      return (CreateRestaurantItem) super.setFields(fields);
    }

    @Override
    public CreateRestaurantItem setKey(java.lang.String key) {
      return (CreateRestaurantItem) super.setKey(key);
    }

    @Override
    public CreateRestaurantItem setOauthToken(java.lang.String oauthToken) {
      return (CreateRestaurantItem) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateRestaurantItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateRestaurantItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateRestaurantItem setQuotaUser(java.lang.String quotaUser) {
      return (CreateRestaurantItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateRestaurantItem setUserIp(java.lang.String userIp) {
      return (CreateRestaurantItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateRestaurantItem setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double basePrice;

    /**

     */
    public java.lang.Double getBasePrice() {
      return basePrice;
    }

    public CreateRestaurantItem setBasePrice(java.lang.Double basePrice) {
      this.basePrice = basePrice;
      return this;
    }

    @Override
    public CreateRestaurantItem set(String parameterName, Object value) {
      return (CreateRestaurantItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getItemsOfCategory".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetItemsOfCategory#execute()} method to invoke the remote operation.
   *
   * @param categoryID
   * @return the request
   */
  public GetItemsOfCategory getItemsOfCategory(java.lang.Long categoryID) throws java.io.IOException {
    GetItemsOfCategory result = new GetItemsOfCategory(categoryID);
    initialize(result);
    return result;
  }

  public class GetItemsOfCategory extends MyApiRequest<backend.myApi.model.ItemCollection> {

    private static final String REST_PATH = "itemcollection/{categoryID}";

    /**
     * Create a request for the method "getItemsOfCategory".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetItemsOfCategory#execute()} method to invoke the remote
     * operation. <p> {@link GetItemsOfCategory#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param categoryID
     * @since 1.13
     */
    protected GetItemsOfCategory(java.lang.Long categoryID) {
      super(MyApi.this, "GET", REST_PATH, null, backend.myApi.model.ItemCollection.class);
      this.categoryID = com.google.api.client.util.Preconditions.checkNotNull(categoryID, "Required parameter categoryID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItemsOfCategory setAlt(java.lang.String alt) {
      return (GetItemsOfCategory) super.setAlt(alt);
    }

    @Override
    public GetItemsOfCategory setFields(java.lang.String fields) {
      return (GetItemsOfCategory) super.setFields(fields);
    }

    @Override
    public GetItemsOfCategory setKey(java.lang.String key) {
      return (GetItemsOfCategory) super.setKey(key);
    }

    @Override
    public GetItemsOfCategory setOauthToken(java.lang.String oauthToken) {
      return (GetItemsOfCategory) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItemsOfCategory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItemsOfCategory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItemsOfCategory setQuotaUser(java.lang.String quotaUser) {
      return (GetItemsOfCategory) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItemsOfCategory setUserIp(java.lang.String userIp) {
      return (GetItemsOfCategory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long categoryID;

    /**

     */
    public java.lang.Long getCategoryID() {
      return categoryID;
    }

    public GetItemsOfCategory setCategoryID(java.lang.Long categoryID) {
      this.categoryID = categoryID;
      return this;
    }

    @Override
    public GetItemsOfCategory set(String parameterName, Object value) {
      return (GetItemsOfCategory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getListOfMerchantsViews".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetListOfMerchantsViews#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetListOfMerchantsViews getListOfMerchantsViews() throws java.io.IOException {
    GetListOfMerchantsViews result = new GetListOfMerchantsViews();
    initialize(result);
    return result;
  }

  public class GetListOfMerchantsViews extends MyApiRequest<backend.myApi.model.CollectionResponseMerchantView> {

    private static final String REST_PATH = "collectionresponse_merchantview";

    /**
     * Create a request for the method "getListOfMerchantsViews".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetListOfMerchantsViews#execute()} method to invoke the remote
     * operation. <p> {@link GetListOfMerchantsViews#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetListOfMerchantsViews() {
      super(MyApi.this, "GET", REST_PATH, null, backend.myApi.model.CollectionResponseMerchantView.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetListOfMerchantsViews setAlt(java.lang.String alt) {
      return (GetListOfMerchantsViews) super.setAlt(alt);
    }

    @Override
    public GetListOfMerchantsViews setFields(java.lang.String fields) {
      return (GetListOfMerchantsViews) super.setFields(fields);
    }

    @Override
    public GetListOfMerchantsViews setKey(java.lang.String key) {
      return (GetListOfMerchantsViews) super.setKey(key);
    }

    @Override
    public GetListOfMerchantsViews setOauthToken(java.lang.String oauthToken) {
      return (GetListOfMerchantsViews) super.setOauthToken(oauthToken);
    }

    @Override
    public GetListOfMerchantsViews setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetListOfMerchantsViews) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetListOfMerchantsViews setQuotaUser(java.lang.String quotaUser) {
      return (GetListOfMerchantsViews) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetListOfMerchantsViews setUserIp(java.lang.String userIp) {
      return (GetListOfMerchantsViews) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursorStr;

    /**

     */
    public java.lang.String getCursorStr() {
      return cursorStr;
    }

    public GetListOfMerchantsViews setCursorStr(java.lang.String cursorStr) {
      this.cursorStr = cursorStr;
      return this;
    }

    @Override
    public GetListOfMerchantsViews set(String parameterName, Object value) {
      return (GetListOfMerchantsViews) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantByID".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetMerchantByID#execute()} method to invoke the remote operation.
   *
   * @param merchantID
   * @return the request
   */
  public GetMerchantByID getMerchantByID(java.lang.Long merchantID) throws java.io.IOException {
    GetMerchantByID result = new GetMerchantByID(merchantID);
    initialize(result);
    return result;
  }

  public class GetMerchantByID extends MyApiRequest<backend.myApi.model.Merchant> {

    private static final String REST_PATH = "merchant/{merchantID}";

    /**
     * Create a request for the method "getMerchantByID".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetMerchantByID#execute()} method to invoke the remote operation.
     * <p> {@link GetMerchantByID#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param merchantID
     * @since 1.13
     */
    protected GetMerchantByID(java.lang.Long merchantID) {
      super(MyApi.this, "GET", REST_PATH, null, backend.myApi.model.Merchant.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantByID setAlt(java.lang.String alt) {
      return (GetMerchantByID) super.setAlt(alt);
    }

    @Override
    public GetMerchantByID setFields(java.lang.String fields) {
      return (GetMerchantByID) super.setFields(fields);
    }

    @Override
    public GetMerchantByID setKey(java.lang.String key) {
      return (GetMerchantByID) super.setKey(key);
    }

    @Override
    public GetMerchantByID setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantByID setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantByID setUserIp(java.lang.String userIp) {
      return (GetMerchantByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public GetMerchantByID setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @Override
    public GetMerchantByID set(String parameterName, Object value) {
      return (GetMerchantByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantByName".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetMerchantByName#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public GetMerchantByName getMerchantByName(java.lang.String name) throws java.io.IOException {
    GetMerchantByName result = new GetMerchantByName(name);
    initialize(result);
    return result;
  }

  public class GetMerchantByName extends MyApiRequest<backend.myApi.model.MerchantViewCollection> {

    private static final String REST_PATH = "merchantviewcollection/{name}";

    /**
     * Create a request for the method "getMerchantByName".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetMerchantByName#execute()} method to invoke the remote operation.
     * <p> {@link GetMerchantByName#initialize(com.google.api.client.googleapis.services.AbstractGoogl
     * eClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected GetMerchantByName(java.lang.String name) {
      super(MyApi.this, "GET", REST_PATH, null, backend.myApi.model.MerchantViewCollection.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantByName setAlt(java.lang.String alt) {
      return (GetMerchantByName) super.setAlt(alt);
    }

    @Override
    public GetMerchantByName setFields(java.lang.String fields) {
      return (GetMerchantByName) super.setFields(fields);
    }

    @Override
    public GetMerchantByName setKey(java.lang.String key) {
      return (GetMerchantByName) super.setKey(key);
    }

    @Override
    public GetMerchantByName setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantByName) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantByName setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantByName) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantByName setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantByName) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantByName setUserIp(java.lang.String userIp) {
      return (GetMerchantByName) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public GetMerchantByName setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public GetMerchantByName set(String parameterName, Object value) {
      return (GetMerchantByName) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantMenuByID".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetMerchantMenuByID#execute()} method to invoke the remote operation.
   *
   * @param merchantID
   * @return the request
   */
  public GetMerchantMenuByID getMerchantMenuByID(java.lang.Long merchantID) throws java.io.IOException {
    GetMerchantMenuByID result = new GetMerchantMenuByID(merchantID);
    initialize(result);
    return result;
  }

  public class GetMerchantMenuByID extends MyApiRequest<backend.myApi.model.MenuView> {

    private static final String REST_PATH = "menuview/{merchantID}";

    /**
     * Create a request for the method "getMerchantMenuByID".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetMerchantMenuByID#execute()} method to invoke the remote
     * operation. <p> {@link GetMerchantMenuByID#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param merchantID
     * @since 1.13
     */
    protected GetMerchantMenuByID(java.lang.Long merchantID) {
      super(MyApi.this, "GET", REST_PATH, null, backend.myApi.model.MenuView.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantMenuByID setAlt(java.lang.String alt) {
      return (GetMerchantMenuByID) super.setAlt(alt);
    }

    @Override
    public GetMerchantMenuByID setFields(java.lang.String fields) {
      return (GetMerchantMenuByID) super.setFields(fields);
    }

    @Override
    public GetMerchantMenuByID setKey(java.lang.String key) {
      return (GetMerchantMenuByID) super.setKey(key);
    }

    @Override
    public GetMerchantMenuByID setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantMenuByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantMenuByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantMenuByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantMenuByID setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantMenuByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantMenuByID setUserIp(java.lang.String userIp) {
      return (GetMerchantMenuByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public GetMerchantMenuByID setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @Override
    public GetMerchantMenuByID set(String parameterName, Object value) {
      return (GetMerchantMenuByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantViewByID".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetMerchantViewByID#execute()} method to invoke the remote operation.
   *
   * @param merchantID
   * @return the request
   */
  public GetMerchantViewByID getMerchantViewByID(java.lang.Long merchantID) throws java.io.IOException {
    GetMerchantViewByID result = new GetMerchantViewByID(merchantID);
    initialize(result);
    return result;
  }

  public class GetMerchantViewByID extends MyApiRequest<backend.myApi.model.MerchantView> {

    private static final String REST_PATH = "merchantview/{merchantID}";

    /**
     * Create a request for the method "getMerchantViewByID".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetMerchantViewByID#execute()} method to invoke the remote
     * operation. <p> {@link GetMerchantViewByID#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param merchantID
     * @since 1.13
     */
    protected GetMerchantViewByID(java.lang.Long merchantID) {
      super(MyApi.this, "GET", REST_PATH, null, backend.myApi.model.MerchantView.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantViewByID setAlt(java.lang.String alt) {
      return (GetMerchantViewByID) super.setAlt(alt);
    }

    @Override
    public GetMerchantViewByID setFields(java.lang.String fields) {
      return (GetMerchantViewByID) super.setFields(fields);
    }

    @Override
    public GetMerchantViewByID setKey(java.lang.String key) {
      return (GetMerchantViewByID) super.setKey(key);
    }

    @Override
    public GetMerchantViewByID setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantViewByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantViewByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantViewByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantViewByID setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantViewByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantViewByID setUserIp(java.lang.String userIp) {
      return (GetMerchantViewByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public GetMerchantViewByID setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @Override
    public GetMerchantViewByID set(String parameterName, Object value) {
      return (GetMerchantViewByID) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
